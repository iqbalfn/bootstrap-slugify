{"version":3,"sources":["../../src/js/slugify.js"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","fn","Default","Event","INPUT_DATA_API","FOCUS_DATA_API","Slugify","element","config","this","_element","_source","document","querySelector","source","value","_addElementListener","_addSourceListener","_this","on","e","off","_this2","toLowerCase","replace","_jQueryInterface","relatedTarget","each","data","_config","_objectSpread","Constructor","noConflict"],"mappings":";;;;;0cAeA,IAAMA,EAAqB,UAErBC,EAAqB,aACrBC,EAAS,IAAgBD,EACzBE,EAAqB,YACrBC,EAAqBC,EAAEC,GAAGN,GAE1BO,EAAU,GAIVC,EAAQ,CACVC,eAAc,QAAgBP,EAAYC,EAC1CO,eAAc,QAAgBR,EAAYC,GAaxCQ,aACF,SAAAA,EAAYC,EAASC,GACjBC,KAAKC,SAAaH,EAClBE,KAAKE,QAAaC,SAASC,cAAcL,EAAOM,QAE7CL,KAAKC,SAASK,QAGjBN,KAAKO,sBACLP,KAAKQ,iDAiBTD,oBAAA,WAAqB,IAAAE,EAAAT,KACjBT,EAAES,KAAKC,UAAUS,GAAGhB,EAAME,eAAgB,SAAAe,GACtCpB,EAAEkB,EAAKP,SAASU,IAAIlB,EAAMC,qBAIlCa,mBAAA,WAAoB,IAAAK,EAAAb,KAChBT,EAAES,KAAKE,SAASQ,GAAGhB,EAAMC,eAAgB,SAAAgB,GACrCE,EAAKZ,SAASK,MAAQO,EAAKX,QAAQI,MAC9BQ,cACAC,QAAQ,WAAY,KACpBA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,SAM1BC,iBAAP,SAAwBjB,EAAQkB,GAC5B,OAAOjB,KAAKkB,KAAK,WACb,IAAIC,EAAO5B,EAAES,MAAMmB,KAAKhC,GAClBiC,4aAAOC,CAAA,GACN5B,EACAF,EAAES,MAAMmB,OACU,iBAAXpB,GAAuBA,EAASA,EAAS,IAGlDoB,IACDA,EAAO,IAAItB,EAAQG,KAAMoB,GACzB7B,EAAES,MAAMmB,KAAKhC,EAAUgC,4FAxC/B,MAxCmB,wCA4CnB,OAAO1B,WAgDfF,EAAEC,GAAGN,GAAQW,EAAQmB,iBACrBzB,EAAEC,GAAGN,GAAMoC,YAAczB,EACzBN,EAAEC,GAAGN,GAAMqC,WAAa,WAEtB,OADAhC,EAAEC,GAAGN,GAAQI,EACNO,EAAQmB","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap Slugify (v0.0.1): slugify.js\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-slugify/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'slugify'\nconst VERSION            = '0.0.1'\nconst DATA_KEY           = 'bs.slugify'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {}\n\nconst DefaultType = {}\n\nconst Event = {\n    INPUT_DATA_API      : `input${EVENT_KEY}${DATA_API_KEY}`,\n    FOCUS_DATA_API      : `focus${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {}\n\nconst Selector = {}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Slugify {\n    constructor(element, config) {\n        this._element   = element\n        this._source    = document.querySelector(config.source)\n\n        if(this._element.value)\n            return\n        \n        this._addElementListener()\n        this._addSourceListener()\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Public\n\n    // Private\n\n    _addElementListener(){\n        $(this._element).on(Event.FOCUS_DATA_API, e => {\n            $(this._source).off(Event.INPUT_DATA_API)\n        })\n    }\n\n    _addSourceListener(){\n        $(this._source).on(Event.INPUT_DATA_API, e => {\n            this._element.value = this._source.value\n                .toLowerCase()\n                .replace(/[^\\w\\-]/g, '-')\n                .replace(/\\-+/g, '-')\n                .replace(/^\\-|\\-$/g, '')\n        })\n    }\n\n    // Static\n\n    static _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n            let data = $(this).data(DATA_KEY)\n            const _config = {\n                ...Default,\n                ...$(this).data(),\n                ...typeof config === 'object' && config ? config : {}\n            }\n\n            if (!data) {\n                data = new Slugify(this, _config)\n                $(this).data(DATA_KEY, data)\n            }\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Slugify._jQueryInterface\n$.fn[NAME].Constructor = Slugify\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Slugify._jQueryInterface\n}\n\nexport default Slugify"]}